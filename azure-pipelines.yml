name: $(SourceBranchName)-$(Date:yyyy.MM.dd)$(Rev:.r)

trigger:
  - master  

pr: none

jobs:

- job: win
  pool:
    vmImage: windows-2019
  steps:

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        echo "const apikey = '$(apikey)';" > apikey.js
        echo "module.exports = apikey;" >> apikey.js
      workingDirectory: $(Build.SourcesDirectory)\public
    displayName: API key insertion

  - task: Bash@3
    inputs:
      targetType: inline
      script: npm -v && npm i && npm run pack-app
      workingDirectory: $(Build.SourcesDirectory)
    displayName: Build and create dist archives

  - task: CopyFiles@2
    inputs:
      sourceFolder: $(Build.SourcesDirectory)\dist
      Contents: '*.exe'
      targetFolder: $(System.ArtifactsDirectory)
    displayName: Copy built files

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: winbuild
      targetPath: $(System.ArtifactsDirectory)
    displayName: Share built files with another job

- job: mac
  pool:
    vmImage: macOS-10.14
  dependsOn: win
  steps:

  - task: Bash@3
    inputs:
      targetType: inline
      script: |
        echo "const apikey = '$(apikey)';" > apikey.js
        echo "module.exports = apikey;" >> apikey.js
      workingDirectory: $(Build.SourcesDirectory)/public
    displayName: API key insertion

  - task: Bash@3
    inputs:
      targetType: inline
      script: |
        source ~/.bashrc
        nvm install 12.3.1
        nvm use --delete-prefix v12.3.1        
        npm -v && npm i && npm run pack-app
      workingDirectory: $(Build.SourcesDirectory)
    displayName: Build and create dist archives

  - task: Bash@3
    inputs:
      targetType: inline
      script: |
        TAG=$(awk -v N=0 '/## v/&&++N==1{print}' changelog.md | sed 's/## //')
        echo "##vso[task.setvariable variable=tag]$TAG"
      workingDirectory: $(Build.SourcesDirectory)
    displayName: Tag name

  - task: Bash@3
    inputs:
      targetType: inline
      script: awk -v N=2 '/## v/&&--N<=0{exit}{print}' changelog.md > notes
      workingDirectory: $(Build.SourcesDirectory)
    displayName: Changelog

  - task: DownloadPipelineArtifact@1
    inputs:
      artifactName: winbuild
      downloadPath: '$(System.ArtifactsDirectory)'
    displayName: Include Windows build

  - task: CopyFiles@2
    inputs:
      sourceFolder: $(Build.SourcesDirectory)/dist
      Contents: '*.zip'
      targetFolder: $(System.ArtifactsDirectory)
    displayName: Copy built zip

  - task: CopyFiles@2
    inputs:
      sourceFolder: $(Build.SourcesDirectory)/dist
      Contents: '*.dmg'
      targetFolder: $(System.ArtifactsDirectory)
    displayName: Copy built dmg

  - task: GitHubRelease@0
    inputs:
      gitHubConnection: github connection 1
      repositoryName: $(Build.Repository.Name)
      tagSource: manual
      tag: $(tag)  
      releaseNotesFile: $(Build.SourcesDirectory)/notes
      assets: $(System.ArtifactsDirectory)/*.*
      addChangeLog: false
      isPreRelease: true
    displayName: GitHub release
